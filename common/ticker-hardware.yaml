
spi:
  clk_pin: D5
  mosi_pin: D7

output:
  - platform: esp8266_pwm
    id: buzzer
    pin: D1

rtttl:
  output: buzzer


display:
  - platform: max7219digit
    id: ticker_display
    cs_pin: D8
    num_chips: 4
    rotate_chip: 180
    reverse_enable: True
    intensity: 8
    update_interval: 67ms
    lambda: |-
      it.intensity(id(brightness));
      if (id(display_page) == 0) {
        it.turn_on_off(false);

      } else if (id(display_page) == 1) {
        it.turn_on_off(true);
        printSlideTime(it, 5, 0, id(hass_time).now());
        it.line(0,0, (id(person_martijn).state == "home") ? 2 : 0,0);
        it.line(0,2, (id(person_veerle).state == "home") ? 2 : 0,2);
        it.line(0,4, (id(person_marjolein).state == "home") ? 2 : 0,4);
        it.line(0,6, (id(person_abel).state == "home") ? 2 : 0,6);
        if (id(internet_veerle).state == "off") {
          it.draw_pixel_at(1,2, COLOR_OFF);
        }
        if (id(internet_marjolein).state == "off") {
          it.draw_pixel_at(1,4, COLOR_OFF);
        }
        if (id(internet_abel).state == "off") {
          it.draw_pixel_at(1,6, COLOR_OFF);
        }

        if (id(contact_voordeur).state) {
          it.draw_pixel_at(31,0);
        }
        if (id(contact_achterdeur).state) {
          it.draw_pixel_at(31,1);
        }
        if (id(contact_raam_martijn).state) {
          it.draw_pixel_at(31,2);
        }
        if (id(contact_raam_abel).state) {
          it.draw_pixel_at(31,3);
        }
        if (id(contact_raam_marjolein).state) {
          it.draw_pixel_at(31,4);
        }
        if (id(contact_bergingdeur).state) {
          it.draw_pixel_at(31,5);
        }
        if (id(contact_trapdeur).state) {
          it.draw_pixel_at(31,6);
        }


      } else if (id(display_page) == 2) {
        it.turn_on_off(true);
        printSlideFormatWithFont(it, 0, 0, "%H|%M|%S", id(hass_time).now(), 4);

      } else if (id(display_page) == 3) {
        it.turn_on_off(true);
        printSlideFormatWithFont(it, 4, 0, "%H:%M:%S", id(hass_time).now(), 3);
        
        it.line(0,0, (id(person_martijn).state == "home") ? 2 : 0,0);
        it.line(0,2, (id(person_veerle).state == "home") ? 2 : 0,2);
        it.line(0,4, (id(person_marjolein).state == "home") ? 2 : 0,4);
        it.line(0,6, (id(person_abel).state == "home") ? 2 : 0,6);
        if (id(internet_veerle).state == "off") {
          it.draw_pixel_at(1,2, COLOR_OFF);
        }
        if (id(internet_marjolein).state == "off") {
          it.draw_pixel_at(1,4, COLOR_OFF);
        }
        if (id(internet_abel).state == "off") {
          it.draw_pixel_at(1,6, COLOR_OFF);
        }

      } else if (id(display_page) == 4) {
        it.turn_on_off(true);
        it.printf(0,0, id(font_press), id(text).state.c_str());
        auto scrollmode = id(scroll_mode) == 0 ?  esphome::max7219digit::ScrollMode::CONTINUOUS : esphome::max7219digit::ScrollMode::STOP;
        it.scroll(true, scrollmode, id(scroll_speed), id(scroll_delay), id(scroll_dwell));

      } else if (id(display_page) == 5) {
        it.turn_on_off(true);
        it.printf(33,0, id(font_press), TextAlign::TOP_RIGHT, "%.0f", 1000.0 * id(current_power_usage).state);

      } else if (id(display_page) == 6) {
        it.turn_on_off(true);
        it.printf(0,0, id(font_press), TextAlign::TOP_LEFT, "%s...", id(alert_message).c_str());
        auto scrollmode = id(scroll_mode) == 0 ?  esphome::max7219digit::ScrollMode::CONTINUOUS : esphome::max7219digit::ScrollMode::STOP;
        it.scroll(true, scrollmode, id(alert_speed), id(scroll_delay), id(scroll_dwell));
      }


font:
  - file: "fonts/PressStart2P.ttf"
    id: font_press
    size: 8
    glyphs:
    - \'
    - ';'
    - ':'
    - '.'
    - ','
    - '!'
    - '?'
    - '"'
    - ' '
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
    - '7'
    - '8'
    - '9'
    - a
    - b
    - c
    - d
    - e
    - f
    - g
    - h
    - i
    - j
    - k
    - l
    - m
    - n
    - o
    - p
    - q
    - r
    - s
    - t
    - u
    - v
    - w
    - x
    - y
    - z
    - A
    - B
    - C
    - D
    - E
    - F
    - G
    - H
    - I
    - J
    - K
    - L
    - M
    - N
    - O
    - P
    - Q
    - R
    - S
    - T
    - U
    - V
    - W
    - X
    - Y
    - Z


binary_sensor:
  - platform: gpio
    id: red_button
    name: Right Button
    pin:
      number: D3
      # mode: INPUT_PULLUP
      inverted: True
    on_click:
      then:
        - script.execute: display_next_page
  - platform: gpio
    id: green_button
    name: Left Button
    pin:
      number: D4
      mode: INPUT_PULLUP
      inverted: True
    on_click:
      then:
        - script.execute: action_button
