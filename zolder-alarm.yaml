substitutions:
  devicename: zolder-alarm
  friendly_name: Zolder Alarm
  pin_buzzer: D5
  pin_button: D6
  pin_rgb: D7
  sound_connected: "connected:d=24,o=5,b=100:c,g,b"
  sound_phonering: 'Phonering:d=32,o=7,b=200:a,f,a,f,a,f,a,f,a,f,a,f,a,f,a,f,a,p,p,f,a,f,a,f,a,f,a,f,a,f,a,f,a,f,a,f,a,f,a,f,a,f'


packages:
  always: !include common/always.yaml
  wifi: !include common/wifi.yaml


esp8266:
  board: d1_mini

esphome:
  name: ${devicename}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false
  on_boot:
    priority: -10
    then:
    - light.turn_on:
        id: activity_led
        brightness: 50%
        red: 100%
        green: 0%
        blue: 0%
    - wait_until:
        api.connected:
    - logger.log: API is connected!
    - rtttl.play: ${sound_connected}
    - light.turn_on:
        id: activity_led
        brightness: 50%
        red: 0%
        green: 100%
        blue: 0%
        flash_length: 1000ms
    - light.turn_off:
        id: activity_led


# Enable Home Assistant API
api:
  services:
    # Service to play RTTTL
    - service: play_rtttl
      variables:
        song_str: string
      then:
        - rtttl.play:
            rtttl: !lambda 'return song_str;'

    # Service to indicate doorbell has been rung
    - service: indicate_doorbell
      then:
        - script.execute: indicate_doorbell

text_sensor:
  - platform: version
    name: ESPHome Version

light:
- platform: neopixelbus
  name: LED
  id: activity_led
  type: RGB
  variant: WS2812
  pin: ${pin_rgb}
  num_leds: 1
  default_transition_length: 10ms
  restore_mode: ALWAYS_OFF


output:
  - platform: esp8266_pwm
    id: buzzer
    pin: ${pin_buzzer}


rtttl:
  output: buzzer


binary_sensor:
  - platform: gpio
    id: button
    name: Button
    pin:
      number: ${pin_button}
      mode: INPUT_PULLUP
      inverted: True
    filters:
      - delayed_off: 20ms
    on_click:
    - then:
        - script.execute: single_press
    on_double_click:
    - then:
        - script.execute: double_press


script:
  - id: indicate_doorbell
    then:
      - rtttl.play: ${sound_phonering}
      - light.turn_on:
          id: activity_led
          brightness: 50%
          red: 0%
          green: 100%
          blue: 0%
          flash_length: 10s
  - id: single_press
    then:
      - logger.log: "Button pressed: single press"
      - rtttl.play: "single:d=9,o=8,b=250:b"
  
  - id: double_press
    then:
      - logger.log: "Button pressed: double press"
      - rtttl.play: "double:d=9,o=8,b=250:b,b"
